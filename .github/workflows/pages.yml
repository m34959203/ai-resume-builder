name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: |
            package-lock.json
            **/package-lock.json

      # Устанавливаем зависимости так, чтобы optional deps точно подтянулись
      - name: Install deps (include optional)
        run: |
          rm -rf node_modules
          if [ -f package-lock.json ]; then
            # пробуем детерминированно
            npm ci --include=optional || (rm -f package-lock.json && npm i --include=optional --no-audit --no-fund)
          else
            npm i --include=optional --no-audit --no-fund
          fi

      # Гарантируем наличие нативного бинарника Rollup для Linux
      - name: Ensure Rollup Linux native binary
        if: runner.os == 'Linux'
        run: |
          npm ls @rollup/rollup-linux-x64-gnu >/dev/null 2>&1 || npm i -D @rollup/rollup-linux-x64-gnu@^4 --no-save
          npm ls @rollup/rollup-linux-x64-gnu

      - name: Build
        run: npm run build

      - name: Create 404.html for SPA routing
        run: cp dist/index.html dist/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
